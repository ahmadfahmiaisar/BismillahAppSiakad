// Generated by Dagger (https://google.github.io/dagger).
package inn.mroyek.bismillahsiakad.di.module;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import inn.mroyek.bismillahsiakad.data.service.DhsService;
import javax.inject.Provider;
import retrofit2.Retrofit;

public final class ServiceModule_ProvideDhsServiceFactory implements Factory<DhsService> {
  private final Provider<Retrofit> retrofitProvider;

  public ServiceModule_ProvideDhsServiceFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public DhsService get() {
    return provideInstance(retrofitProvider);
  }

  public static DhsService provideInstance(Provider<Retrofit> retrofitProvider) {
    return proxyProvideDhsService(retrofitProvider.get());
  }

  public static ServiceModule_ProvideDhsServiceFactory create(Provider<Retrofit> retrofitProvider) {
    return new ServiceModule_ProvideDhsServiceFactory(retrofitProvider);
  }

  public static DhsService proxyProvideDhsService(Retrofit retrofit) {
    return Preconditions.checkNotNull(
        ServiceModule.provideDhsService(retrofit),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
