// Generated by Dagger (https://google.github.io/dagger).
package inn.mroyek.bismillahsiakad.di.module;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import inn.mroyek.bismillahsiakad.data.service.KrsService;
import javax.inject.Provider;
import retrofit2.Retrofit;

public final class ServiceModule_ProvideKrsServiceFactory implements Factory<KrsService> {
  private final Provider<Retrofit> retrofitProvider;

  public ServiceModule_ProvideKrsServiceFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public KrsService get() {
    return provideInstance(retrofitProvider);
  }

  public static KrsService provideInstance(Provider<Retrofit> retrofitProvider) {
    return proxyProvideKrsService(retrofitProvider.get());
  }

  public static ServiceModule_ProvideKrsServiceFactory create(Provider<Retrofit> retrofitProvider) {
    return new ServiceModule_ProvideKrsServiceFactory(retrofitProvider);
  }

  public static KrsService proxyProvideKrsService(Retrofit retrofit) {
    return Preconditions.checkNotNull(
        ServiceModule.provideKrsService(retrofit),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
